{"version":3,"sources":["src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/TokenName.tsx","src/components/TokenSymbol.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useSwapper.tsx","src/hooks/useMigrateState.tsx","src/screens/MigrateScreen.tsx"],"names":["InsufficientBalanceButton","symbol","t","useTranslation","title","disabled","ApproveButton","props","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","marginBottom","Spacing","tiny","TokenName","caption","numberOfLines","ellipsizeMode","style","marginLeft","small","width","IS_DESKTOP","name","TokenSymbol","medium","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenAmount","formatBalance","amount","balance","decimals","TokenPrice","note","fontWeight","formatUSD","priceUSD","TokenValue","valueUSD","Loading","ActivityIndicator","size","position","right","bottom","TokenItem","accent","useColors","onSelectToken","Selectable","selected","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","View","flex","Button","type","color","duplicate","buttonStyle","paddingHorizontal","height","TokenSearch","border","useStyles","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","text","undefined","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","placeholder","autoFocus","inputStyle","marginHorizontal","fontSize","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","length","FlatList","keyExtractor","EmptyList","margin","normal","Text","textAlign","selectable","viewOnly","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","expanded","onExpand","onChangeSymbol","includes","useSwapper","ethereum","swap","signer","contract","getContract","SWAPPER","getAddress","args","estimateGas","gasLimit","mul","div","logTransaction","map","arg","useMigrateState","state","useTokenPairState","getTokenAllowance","updateTokens","migrating","setMigrating","setFromSymbol","fromToken","setFromTokenAllowed","minAllowance","BigNumber","from","pow","sub","allowance","gte","onMigrate","fromAmount","parseBalance","Migrate","chainId","ChangeNetwork","marginTop","large","Border","OhGeezAmount","_","AmountInput","TokenInput","onAmountChanged","setFromAmount","Heading","AmountInfo","isEmptyValue","InfoBox","Meta","label","Controls","error","setError","gt","FetchingButton","fromTokenAllowed","message","code","ErrorMessage","MigrateButton","MigrateScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/12.a02f41d0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const t = useTranslation();\n    const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={t(\"token-name-symbol-or-address\")}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const t = useTranslation();\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenPrice from \"./TokenPrice\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\nimport TokenValue from \"./TokenValue\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    viewOnly?: boolean;\n    style?: ViewStyle;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.symbol}\n                viewOnly={true}\n                onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && (\n                <TokenItem\n                    token={token}\n                    selected={true}\n                    onSelectToken={onUnselectToken}\n                    selectable={true}\n                    viewOnly={props.viewOnly}\n                />\n            )}\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    const t = useTranslation();\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {t(\"you-dont-have-assets\")}\n            </Text>\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem = (props: {\n    token: TokenWithValue;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n    viewOnly?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <View>\n                    {props.token.priceUSD !== null && (\n                        <TokenPrice\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ marginLeft: Spacing.small }}\n                        />\n                    )}\n                    <TokenName token={props.token} disabled={props.disabled} />\n                </View>\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\n                    <FlexView>\n                        <TokenAmount\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ flex: 1, textAlign: \"right\" }}\n                        />\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                    </FlexView>\n                </View>\n                {props.selected ? !props.viewOnly && <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\n    const value2 = t2?.valueUSD || 0;\n    const value1 = t1?.valueUSD || 1;\n    if (value2 === value1) {\n        return (\n            (t2.balance.isZero() ? 0 : 10000000000) -\n            (t1.balance.isZero() ? 0 : 10000000000) +\n            t1.symbol.localeCompare(t2.symbol)\n        );\n    }\n    return value2 - value1;\n};\n\nexport default TokenSelect;\n","import { useCallback, useContext } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport { SWAPPER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapper = () => {\n    const { ethereum } = useContext(EthersContext);\n\n    const swap = useCallback(\n        async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const contract = getContract(\"Swapper\", SWAPPER, signer);\n            const args = [amount, await signer.getAddress()];\n            const gasLimit = await contract.estimateGas.swap(...args);\n            const tx = await contract.swap(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"Swapper.swap()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    return {\n        swap\n    };\n};\n\nexport default useSwapper;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { SWAPPER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useSwapper from \"./useSwapper\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface MigrateState extends TokenPairState {\n    onMigrate: () => Promise<void>;\n    migrating: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useMigrateState: () => MigrateState = () => {\n    const state = useTokenPairState();\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\n    const { swap } = useSwapper();\n    const [loading, setLoading] = useState(false);\n    const [migrating, setMigrating] = useState(false);\n\n    useEffect(() => {\n        state.setFromSymbol(\"OH-GEEZ\");\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.fromToken) {\n            setLoading(true);\n            state.setFromTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.fromToken.address, SWAPPER);\n                state.setFromTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.fromToken]);\n\n    const onMigrate = useCallback(async () => {\n        if (swap && state.fromToken && state.fromAmount && provider && signer) {\n            setMigrating(true);\n            try {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await swap(amount, signer);\n                await tx.wait();\n                await updateTokens();\n            } finally {\n                setMigrating(false);\n            }\n        }\n    }, [swap, state.fromToken, state.fromAmount, provider, signer, updateTokens]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        onMigrate,\n        migrating\n    };\n};\n\nexport default useMigrateState;\n","import React, { useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport ChangeNetwork from \"../components/ChangeNetwork\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { MigrateSubMenu } from \"../components/web/WebSubMenu\";\nimport { SWAPPER } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useMigrateState, { MigrateState } from \"../hooks/useMigrateState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst MigrateScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"migrate\")} />\n                    <Text light={true}>{t(\"migrate-desc\")}</Text>\n                    <Migrate />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <MigrateSubMenu />\n        </Screen>\n    );\n};\n\nconst Migrate = () => {\n    const { chainId } = useContext(EthersContext);\n    const state = useMigrateState();\n    if (chainId !== 1) return <ChangeNetwork />;\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OhGeezAmount state={state} />\n            <Border />\n            <AmountInput state={state} />\n            <AmountInfo state={state} />\n        </View>\n    );\n};\n\nconst OhGeezAmount = (_: { state: MigrateState }) => {\n    const t = useTranslation();\n    return <TokenSelect title={t(\"my-balance\")} symbol={\"OH-GEEZ\"} onChangeSymbol={() => {}} viewOnly={true} />;\n};\n\nconst AmountInput = ({ state }: { state: MigrateState }) => {\n    const t = useTranslation();\n    if (!state.fromToken) {\n        return <Heading text={t(\"amount-of-tokens\")} disabled={true} />;\n    }\n    return (\n        <TokenInput\n            title={t(\"amount-of-tokens\")}\n            token={state.fromToken}\n            amount={state.fromAmount}\n            onAmountChanged={state.setFromAmount}\n        />\n    );\n};\n\nconst AmountInfo = ({ state }: { state: MigrateState }) => {\n    const disabled = !state.fromToken || isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Meta label={\"LEVX\"} text={formatBalance(parseBalance(state.fromAmount).mul(10))} disabled={disabled} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst Controls = ({ state }: { state: MigrateState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromAmount]);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken || isEmptyValue(state.fromAmount) ? (\n                <MigrateButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromToken.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    {!state.fromTokenAllowed && (\n                        <ApproveButton\n                            token={state.fromToken}\n                            spender={SWAPPER}\n                            onSuccess={() => state.setFromTokenAllowed(true)}\n                            onError={setError}\n                        />\n                    )}\n                    <MigrateButton state={state} onError={setError} disabled={!state.fromTokenAllowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst MigrateButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: MigrateState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const onPress = async () => {\n        onError({});\n        try {\n            await state.onMigrate();\n        } catch (e) {\n            onError(e);\n        }\n    };\n    return <Button title={t(\"migrate\")} loading={state.migrating} onPress={onPress} disabled={disabled} />;\n};\n\nexport default MigrateScreen;\n"],"sourceRoot":""}