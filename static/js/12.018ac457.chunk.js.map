{"version":3,"sources":["src/components/Heading.tsx","src/components/Loading.tsx","src/components/TokenLogo.tsx","src/components/Border.tsx","src/components/TokenName.tsx","src/components/TokenSymbol.tsx","src/components/TokenAmount.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","assets/images/empty-token.png","assets/images/ETH.png","src/hooks/useHomeState.tsx","src/screens/HomeScreen.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","Loading","marginVertical","large","TokenLogo","backgroundLight","useState","error","setError","placeholder","require","ETH","source","replaceWETH","isWETH","token","uri","logoURI","width","backgroundColor","borderRadius","onError","opacity","Border","border","marginTop","TokenName","caption","numberOfLines","ellipsizeMode","marginLeft","name","symbol","TokenSymbol","TokenAmount","formatBalance","amount","balance","decimals","TokenPrice","note","formatUSD","priceUSD","TokenValue","valueUSD","module","exports","useHomeState","useContext","EthersContext","provider","signer","address","tokens","lpTokens","setLPTokens","loadingLPTokens","setLoadingLPTokens","getPair","useSDK","useEffect","undefined","useAsyncEffect","a","async","weth","find","t","length","Fraction","String","sushiData","price","wethPriceUSD","parse","fetchMyLPTokens","getAddress","fetched","Promise","all","map","lpToken","fetchLPTokenWithValue","Home","state","View","normal","MyTokens","_","useTranslation","loadingTokens","goToSwap","useLinker","loading","TokenItem","MyLPTokens","goToRemoveLiquidity","LPTokenItem","TokenList","renderItem","useCallback","item","key","data","useMemo","filter","amountDeposited","isZero","sort","t1","t2","FlatList","keyExtractor","ItemSeparatorComponent","EmptyList","margin","Text","textAlign","FlexView","paddingVertical","path","tokenA","tokenB","ExternalIcon","textDark","isETH","endsWith","ethers","constants","AddressZero","TouchableHighlight","window","open","toLowerCase","sum","reduce","previous","current","HomeScreen","totalValue","Screen","Container","BackgroundImage","Content","Title","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/12.018ac457.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\nimport { isWETH } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/images/empty-token.png\");\n    const ETH = require(\"../../assets/images/ETH.png\");\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import { useContext, useEffect, useState } from \"react\";\n\nimport sushiData from \"@sushiswap/sushi-data\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport { isWETH } from \"../utils\";\nimport { fetchLPTokenWithValue, fetchMyLPTokens } from \"../utils/fetch-utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface HomeState {\n    loadingLPTokens: boolean;\n    lpTokens?: LPTokenWithValue[];\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useHomeState = () => {\n    const { provider, signer, address, tokens } = useContext(EthersContext);\n    const [lpTokens, setLPTokens] = useState<LPTokenWithValue[]>();\n    const [loadingLPTokens, setLoadingLPTokens] = useState(true);\n    const { getPair } = useSDK();\n\n    useEffect(() => {\n        setLPTokens(undefined);\n        setLoadingLPTokens(true);\n    }, [address]);\n\n    // Load Liquidity\n    useAsyncEffect(async () => {\n        const weth = tokens.find(t => isWETH(t));\n        if (provider && signer && weth && tokens && tokens.length > 0) {\n            setLoadingLPTokens(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyLPTokens(await signer.getAddress(), tokens, provider);\n            try {\n                setLPTokens(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingLPTokens(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens]);\n\n    return {\n        loadingLPTokens,\n        tokens,\n        lpTokens\n    };\n};\n\nexport default useHomeState;\n","import React, { FC, useCallback, useContext, useMemo } from \"react\";\nimport { FlatList, Platform, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nimport { ethers } from \"ethers\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport Loading from \"../components/Loading\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenAmount from \"../components/TokenAmount\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenName from \"../components/TokenName\";\nimport TokenPrice from \"../components/TokenPrice\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport TokenValue from \"../components/TokenValue\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { HomeSubMenu } from \"../components/web/WebSubMenu\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useHomeState, { HomeState } from \"../hooks/useHomeState\";\nimport useLinker from \"../hooks/useLinker\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Screen from \"./Screen\";\n\ninterface TokenItemProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n}\n\ninterface LPTokenItemProps {\n    token: LPTokenWithValue;\n    disabled?: boolean;\n}\n\nconst HomeScreen = () => {\n    const t = useTranslation();\n    const state = useHomeState();\n    const { loadingTokens } = useContext(EthersContext);\n    const loading = loadingTokens || state.loadingLPTokens;\n    const totalValue = sum(state.tokens) + sum(state.lpTokens);\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content style={{ paddingBottom: Spacing.large }}>\n                    <Title text={t(\"total-value\")} style={{ flex: 1 }} />\n                    <Title\n                        text={loading ? t(\"fetching\") : formatUSD(totalValue, 4)}\n                        fontWeight={\"light\"}\n                        disabled={loading}\n                        style={{ fontSize: IS_DESKTOP ? 32 : 24 }}\n                    />\n                    <Home state={state} />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <HomeSubMenu />\n        </Screen>\n    );\n};\n\nconst Home = ({ state }: { state: HomeState }) => {\n    return (\n        <View style={{ marginTop: IS_DESKTOP ? Spacing.large : Spacing.normal }}>\n            <MyTokens state={state} />\n            <View style={{ height: Spacing.large }} />\n            <MyLPTokens state={state} />\n        </View>\n    );\n};\n\nconst MyTokens = (_: { state: HomeState }) => {\n    const t = useTranslation();\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const goToSwap = useLinker(\"/swap\", \"Swap\");\n    return (\n        <View>\n            <Heading text={t(\"tokens\")} buttonText={t(\"manage\")} onPressButton={goToSwap} />\n            <TokenList loading={loadingTokens} tokens={tokens} TokenItem={TokenItem} />\n        </View>\n    );\n};\n\nconst MyLPTokens = ({ state }: { state: HomeState }) => {\n    const t = useTranslation();\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\n    return (\n        <View>\n            <Heading text={t(\"liquidity\")} buttonText={t(\"manage\")} onPressButton={goToRemoveLiquidity} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingLPTokens} tokens={state.lpTokens} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    loading: boolean;\n    tokens?: TokenWithValue[] | LPTokenWithValue[];\n    TokenItem: FC<TokenItemProps | LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(({ item }) => {\n        return <props.TokenItem key={item.address} token={item} />;\n    }, []);\n    const data = useMemo(\n        () =>\n            (props.tokens || [])\n                // @ts-ignore\n                .filter(token => !(token.amountDeposited ? token.amountDeposited.isZero() : token.balance.isZero()))\n                .sort((t1, t2) => (t2.valueUSD || 0) - (t1.valueUSD || 0)),\n        [props.tokens]\n    );\n    return props.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList\n            keyExtractor={item => item.address}\n            data={data}\n            renderItem={renderItem}\n            ItemSeparatorComponent={() => <Border small={true} />}\n        />\n    );\n};\n\nconst EmptyList = () => {\n    const t = useTranslation();\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {t(\"you-dont-have-assets\")}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: TokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token} disabled={props.disabled} />\n            <View>\n                <TokenPrice token={props.token} disabled={props.disabled} style={{ marginLeft: Spacing.small }} />\n                <TokenName token={props.token} disabled={props.disabled} />\n            </View>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenValue token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} disabled={props.disabled} />\n                    {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                </FlexView>\n            </View>\n            <ExternalIcon path={\"/tokens/\" + props.token.address} />\n        </FlexView>\n    );\n};\n\nconst LPTokenItem = (props: LPTokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n            <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n            <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n            </Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenValue token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} amount={props.token.amountDeposited} disabled={props.disabled} />\n                </FlexView>\n            </View>\n            <ExternalIcon path={\"/pairs/\" + props.token.address} />\n        </FlexView>\n    );\n};\n\nconst ExternalIcon = ({ path }) => {\n    const { textDark, disabled } = useColors();\n    const onPress = () => window.open(\"https://analytics.sushi.com\" + path.toLowerCase(), \"_blank\");\n    const isETH = path.endsWith(ethers.constants.AddressZero);\n    return (\n        <TouchableHighlight onPress={onPress} disabled={isETH}>\n            <Icon\n                type={\"evilicon\"}\n                name={\"external-link\"}\n                color={isETH ? disabled : textDark}\n                style={{ marginLeft: Spacing.tiny }}\n            />\n        </TouchableHighlight>\n    );\n};\n\nconst sum = tokens => (tokens ? tokens.reduce((previous, current) => previous + (current.valueUSD || 0), 0) : 0);\n\nexport default HomeScreen;\n"],"sourceRoot":""}