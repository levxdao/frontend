{"version":3,"sources":["src/components/InsufficientBalanceButton.tsx","src/constants/index.ts","src/components/ApproveButton.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/components/LPTokenSelect.tsx","src/hooks/useLPTokensState.tsx","src/components/Select.tsx","node_modules/eth-permit/dist/eth-permit.js","node_modules/eth-permit/dist/rpc.js","node_modules/eth-permit/dist/lib.js","node_modules/utf8/utf8.js","src/hooks/useMigratoooooor.tsx","src/hooks/useMigrateLPState.tsx","src/screens/MigrateLPScreen.tsx"],"names":["InsufficientBalanceButton","symbol","t","useTranslation","title","disabled","TTL","ALLOWED_SLIPPAGE","Percent","FEE","API_SERVER","process","ApproveButton","props","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","marginBottom","Spacing","tiny","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","forEach","handle","clearTimeout","LPTokenList","state","emptyText","Item","renderItem","item","key","selected","onSelectToken","setSelectedLPToken","data","lpTokens","sort","p1","p2","m1","multiplier","m2","apy","length","EmptyList","text","keyExtractor","style","margin","normal","textAlign","width","LPTokenItem","textMedium","useColors","balance","formatBalance","decimals","ITEM_SEPARATOR_HEIGHT","alignItems","tokenA","small","replaceWETH","tokenB","marginLeft","medium","caption","flex","light","color","viewOnly","LPTokenSelect","expanded","selectedLPToken","onExpand","updatingLPTokens","useLPTokensState","mode","useTokenPairState","provider","tokens","lastTimeRefreshed","setLastTimeRefreshed","setLPTokens","selectedLPTokenAllowed","setSelectedLPTokenAllowed","pair","setPair","amount","setAmount","getPair","useSDK","updateLPTokens","fetchMyPools","fetchPools","fetchMyLPTokens","useEffect","undefined","block","fromToken","toToken","updateLastTimeRefreshed","Date","now","paddingLeft","paddingRight","selectable","setOption","option","fontWeight","note","marginTop","description","Select","options","map","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","signERC2612Permit","signDaiPermit","rpc_1","lib_1","MAX_INT","EIP712Domain","name","type","zeros","numZeros","padEnd","getTokenName","hexToUtf8","call","substr","getDomain","tokenAddress","chainId","all","getChainId","version","verifyingContract","holder","expiry","nonce","message","allowed","typedData","domain","types","Permit","primaryType","createTypedDaiData","sig","signData","assign","owner","deadline","createTypedERC2612Data","setChainIdOverride","send","method","params","payload","id","Math","floor","random","callback","err","error","console","_provider","sendAsync","fromAddress","typeData","typeDataString","JSON","stringify","catch","r","slice","s","v","parseInt","chainIdOverride","to","__importDefault","mod","__esModule","utf8_1","hex","str","code","l","replace","split","reverse","join","i","String","fromCharCode","default","decode","root","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","output","counter","charCodeAt","push","checkScalarValue","codePoint","Error","toString","toUpperCase","createByte","shift","encodeCodePoint","readContinuationByte","continuationByte","decodeSymbol","byte1","encode","codePoints","index","byteString","tmp","array","ucs2encode","useMigratoooooor","ethereum","migrate","liquidity","amountWethAddedMin","signer","contract","getContract","MIGRATOOOOOOR","getTime","getAddress","args","estimateGas","gasLimit","mul","div","logTransaction","arg","migrateWithPermit","OH_GEEZ_LP","permit","SLIPPAGE_TOLERANCE","useMigrateLPState","getTokenAllowance","updateTokens","setMode","migrating","setMigrating","isWalletConnect","find","minAllowance","ethers","BigNumber","from","pow","sub","allowance","gte","totalSupply","liquidityToken","fromReserve","parseCurrencyAmount","reserveOf","convertToken","toReserve","setFromAmount","parseBalance","setToAmount","onMigrate","toAmount","func","deduct","Migrate","ChangeNetwork","View","large","Border","MigrateModeSelect","OhGeezLiquidity","Heading","AmountInput","TokenInput","onAmountChanged","AmountInfo","isEmptyValue","InfoBox","Meta","label","fromAmount","Controls","setError","gt","FetchingButton","ErrorMessage","MigrateButton","Button","MigrateLPScreen","Screen","Container","BackgroundImage","Content","Title","Text","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/11.2a34169b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import { Percent } from \"@sushiswap/sdk\";\n\nexport const TTL = 60 * 20;\nexport const ALLOWED_SLIPPAGE = new Percent(\"50\", \"10000\"); // 0.05%\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\nexport const API_SERVER = process.env.NODE_ENV === \"production\" ? \"https://api.levxdao.org\" : \"http://localhost:3001\";\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import React, { FC, useCallback } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\nimport LPToken from \"../types/LPToken\";\nimport { formatBalance } from \"../utils\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenLogo from \"./TokenLogo\";\n\nexport interface LPTokenSelectProps {\n    state: LPTokensState;\n    title: string;\n    emptyText: string;\n    Item: FC<LPTokenItemProps>;\n    disabled?: boolean;\n    viewOnly?: boolean;\n    style?: ViewStyle;\n}\n\nexport interface LPTokenItemProps {\n    token: LPToken;\n    selected: boolean;\n    viewOnly?: boolean;\n    onSelectToken: (token: LPToken) => void;\n}\n\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\n    const onUnselectToken = () => props.state.setSelectedLPToken();\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.state.selectedLPToken}\n                viewOnly={props.viewOnly}\n                onExpand={() => props.state.setSelectedLPToken()}>\n                <LPTokenList state={props.state} emptyText={props.emptyText} Item={props.Item} />\n            </Expandable>\n            {props.state.selectedLPToken && (\n                <props.Item\n                    token={props.state.selectedLPToken}\n                    selected={true}\n                    viewOnly={props.viewOnly}\n                    onSelectToken={props.disabled ? () => {} : onUnselectToken}\n                />\n            )}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LPTokenList = ({\n    state,\n    emptyText,\n    Item\n}: {\n    state: LPTokensState;\n    emptyText: string;\n    Item: FC<LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return <Item key={item.symbol} token={item} selected={false} onSelectToken={state.setSelectedLPToken} />;\n        },\n        [state.setSelectedLPToken]\n    );\n    const data = state.lpTokens.sort((p1, p2) => {\n        const m1 = p1.multiplier || 0;\n        const m2 = p2.multiplier || 0;\n        return m1 === m2 ? (p2.apy || 0) - (p1.apy || 0) : m2 - m1;\n    });\n    return state.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList text={emptyText} />\n    ) : (\n        <FlatList keyExtractor={item => item.symbol} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = ({ text }: { text: string }) => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {text}\n            </Text>\n        </View>\n    );\n};\n\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\n    const { textMedium } = useColors();\n    const balance = formatBalance(props.token.balance, props.token.decimals, 6);\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                    {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n                </Text>\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\n                        {balance}\n                    </Text>\n                </View>\n                {props.selected ? !props.viewOnly && <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default LPTokenSelect;\n","import { useContext, useEffect, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport { fetchMyLPTokens, fetchMyPools, fetchPools } from \"../utils/fetch-utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface LPTokensState extends TokenPairState {\n    updateLPTokens: () => Promise<void>;\n    lastTimeRefreshed: number;\n    updateLastTimeRefreshed: () => void;\n    lpTokens: LPToken[];\n    selectedLPToken?: LPToken;\n    setSelectedLPToken: (token?: LPToken) => void;\n    selectedLPTokenAllowed: boolean;\n    setSelectedLPTokenAllowed: (allowed: boolean) => void;\n    pair?: Pair;\n    amount: string;\n    setAmount: (amount: string) => void;\n}\n\ntype Mode = \"pools\" | \"my-pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\n\nlet updatingLPTokens = false;\n\n// tslint:disable-next-line:max-func-body-length\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\n    const state = useTokenPairState();\n    const { provider, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\n    const [selectedLPTokenAllowed, setSelectedLPTokenAllowed] = useState(false);\n    const [pair, setPair] = useState<Pair>();\n    const [amount, setAmount] = useState(\"\");\n    const { getPair } = useSDK();\n\n    const updateLPTokens = async () => {\n        if (address && provider && tokens.length > 0 && !updatingLPTokens) {\n            try {\n                updatingLPTokens = true;\n                const data = await (mode === \"my-pools\"\n                    ? fetchMyPools(address, tokens, provider)\n                    : mode === \"pools\"\n                    ? fetchPools(address, tokens, provider)\n                    : fetchMyLPTokens(address, tokens, provider));\n                if (data) {\n                    setLPTokens(data);\n                }\n            } finally {\n                updatingLPTokens = false;\n                setLoading(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (!selectedLPToken) {\n            setAmount(\"\");\n        }\n    }, [selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        setLoading(true);\n        setPair(undefined);\n        if (selectedLPToken && provider) {\n            try {\n                setPair(await getPair(selectedLPToken.tokenA, selectedLPToken.tokenB, provider));\n            } catch (e) {\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    }, [selectedLPToken, provider]);\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\n                if (!block) {\n                    setLoading(true);\n                }\n                await updateLPTokens();\n            }\n        },\n        () => \"updateLPTokens()\",\n        [tokens.length, address, lastTimeRefreshed],\n        0\n    );\n\n    return {\n        ...state,\n        fromToken: state.fromToken || selectedLPToken?.tokenA,\n        toToken: state.toToken || selectedLPToken?.tokenB,\n        updateLPTokens,\n        loading: state.loading || loading,\n        lastTimeRefreshed,\n        updateLastTimeRefreshed: () => {\n            setLastTimeRefreshed(Date.now());\n        },\n        lpTokens,\n        selectedLPToken,\n        setSelectedLPToken,\n        selectedLPTokenAllowed,\n        setSelectedLPTokenAllowed,\n        pair,\n        amount,\n        setAmount\n    };\n};\n\nexport default useLPTokensState;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\n\nexport interface Option {\n    key: string;\n    title: string;\n    description: string;\n}\n\nexport interface SelectProps {\n    title: string;\n    options: Option[];\n    option?: Option;\n    setOption: (option?: Option) => void;\n}\n\nconst Select: FC<SelectProps> = props => {\n    return (\n        <View>\n            <Expandable title={props.title} expanded={!props.option} onExpand={() => props.setOption()}>\n                {props.options.map(option => (\n                    <Item\n                        key={option.key}\n                        option={option}\n                        setOption={props.setOption}\n                        selected={option.key === props.option?.key}\n                    />\n                ))}\n            </Expandable>\n            {props.option && (\n                <Item option={props.option} setOption={props.setOption} selected={true} selectable={false} />\n            )}\n        </View>\n    );\n};\n\nconst Item = (props: {\n    option: Option;\n    setOption?: (option?: Option) => void;\n    selected: boolean;\n    selectable?: boolean;\n}) => {\n    return (\n        <Selectable\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\n            style={{ paddingLeft: Spacing.small + Spacing.tiny, paddingRight: Spacing.small }}\n            selected={props.selected}\n            disabled={props.selectable}\n            onPress={() => props.setOption?.(props.selected ? undefined : props.option)}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View style={{ flex: 1 }}>\n                    <Text fontWeight={\"regular\"}>{props.option.title}</Text>\n                    <Text note={true} style={{ marginTop: 4 }}>\n                        {props.option.description}\n                    </Text>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default Select;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signERC2612Permit = exports.signDaiPermit = void 0;\nconst rpc_1 = require(\"./rpc\");\nconst lib_1 = require(\"./lib\");\nconst MAX_INT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\nconst EIP712Domain = [\n    { name: \"name\", type: \"string\" },\n    { name: \"version\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" },\n];\nconst createTypedDaiData = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"holder\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"expiry\", type: \"uint256\" },\n                { name: \"allowed\", type: \"bool\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst createTypedERC2612Data = (message, domain) => {\n    const typedData = {\n        types: {\n            EIP712Domain,\n            Permit: [\n                { name: \"owner\", type: \"address\" },\n                { name: \"spender\", type: \"address\" },\n                { name: \"value\", type: \"uint256\" },\n                { name: \"nonce\", type: \"uint256\" },\n                { name: \"deadline\", type: \"uint256\" },\n            ],\n        },\n        primaryType: \"Permit\",\n        domain,\n        message,\n    };\n    return typedData;\n};\nconst NONCES_FN = '0x7ecebe00';\nconst NAME_FN = '0x06fdde03';\nconst zeros = (numZeros) => ''.padEnd(numZeros, '0');\nconst getTokenName = (provider, address) => __awaiter(void 0, void 0, void 0, function* () { return lib_1.hexToUtf8((yield rpc_1.call(provider, address, NAME_FN)).substr(130)); });\nconst getDomain = (provider, token) => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof token !== 'string') {\n        return token;\n    }\n    const tokenAddress = token;\n    const [name, chainId] = yield Promise.all([\n        getTokenName(provider, tokenAddress),\n        rpc_1.getChainId(provider),\n    ]);\n    const domain = { name, version: '1', chainId, verifyingContract: tokenAddress };\n    return domain;\n});\nexports.signDaiPermit = (provider, token, holder, spender, expiry, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        holder,\n        spender,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${holder.substr(2)}`)),\n        expiry: expiry || MAX_INT,\n        allowed: true,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedDaiData(message, domain);\n    const sig = yield rpc_1.signData(provider, holder, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\nexports.signERC2612Permit = (provider, token, owner, spender, value = MAX_INT, deadline, nonce) => __awaiter(void 0, void 0, void 0, function* () {\n    const tokenAddress = token.verifyingContract || token;\n    const message = {\n        owner,\n        spender,\n        value,\n        nonce: nonce || (yield rpc_1.call(provider, tokenAddress, `${NONCES_FN}${zeros(24)}${owner.substr(2)}`)),\n        deadline: deadline || MAX_INT,\n    };\n    const domain = yield getDomain(provider, token);\n    const typedData = createTypedERC2612Data(message, domain);\n    const sig = yield rpc_1.signData(provider, owner, typedData);\n    return Object.assign(Object.assign({}, sig), message);\n});\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.call = exports.getChainId = exports.setChainIdOverride = exports.signData = exports.send = void 0;\nconst randomId = () => Math.floor(Math.random() * 10000000000);\nexports.send = (provider, method, params) => new Promise((resolve, reject) => {\n    const payload = {\n        id: randomId(),\n        method,\n        params,\n    };\n    const callback = (err, result) => {\n        if (err) {\n            reject(err);\n        }\n        else if (result.error) {\n            console.error(result.error);\n            reject(result.error);\n        }\n        else {\n            resolve(result.result);\n        }\n    };\n    let _provider = provider.provider || provider;\n    if (_provider.sendAsync) {\n        _provider.sendAsync(payload, callback);\n    }\n    else {\n        _provider.send(payload, callback);\n    }\n});\nexports.signData = (provider, fromAddress, typeData) => __awaiter(void 0, void 0, void 0, function* () {\n    const typeDataString = typeof typeData === 'string' ? typeData : JSON.stringify(typeData);\n    const result = yield exports.send(provider, 'eth_signTypedData_v4', [fromAddress, typeDataString])\n        .catch((error) => {\n        if (error.message === 'Method eth_signTypedData_v4 not supported.') {\n            return exports.send(provider, 'eth_signTypedData', [fromAddress, typeData]);\n        }\n        else {\n            throw error;\n        }\n    });\n    return {\n        r: result.slice(0, 66),\n        s: '0x' + result.slice(66, 130),\n        v: parseInt(result.slice(130, 132), 16),\n    };\n});\nlet chainIdOverride = null;\nexports.setChainIdOverride = (id) => { chainIdOverride = id; };\nexports.getChainId = (provider) => __awaiter(void 0, void 0, void 0, function* () { return chainIdOverride || exports.send(provider, 'eth_chainId'); });\nexports.call = (provider, to, data) => exports.send(provider, 'eth_call', [{\n        to,\n        data,\n    }, 'latest']);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToUtf8 = void 0;\nconst utf8_1 = __importDefault(require(\"utf8\"));\nexports.hexToUtf8 = function (hex) {\n    // if (!isHexStrict(hex))\n    //     throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n    let str = \"\";\n    let code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    let l = hex.length;\n    for (let i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8_1.default.decode(str);\n};\n","/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n","import { useCallback, useContext } from \"react\";\n\nimport { signERC2612Permit } from \"eth-permit\";\nimport { ethers } from \"ethers\";\nimport { TTL } from \"../constants\";\nimport { MIGRATOOOOOOR, OH_GEEZ_LP } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useMigratoooooor = () => {\n    const { ethereum } = useContext(EthersContext);\n\n    const migrate = useCallback(\n        async (liquidity: ethers.BigNumber, amountWethAddedMin: ethers.BigNumber, signer: ethers.Signer) => {\n            const contract = getContract(\"Migratoooooor\", MIGRATOOOOOOR, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + TTL;\n            const args = [liquidity, amountWethAddedMin, deadline, await signer.getAddress()];\n            const gasLimit = await contract.estimateGas.migrate(...args);\n            const tx = await contract.migrate(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"Migratoooooor.migrate()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const migrateWithPermit = useCallback(\n        async (liquidity: ethers.BigNumber, amountWethAddedMin: ethers.BigNumber, signer: ethers.Signer) => {\n            const contract = getContract(\"Migratoooooor\", MIGRATOOOOOOR, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + TTL;\n            const permit = await signERC2612Permit(\n                ethereum,\n                OH_GEEZ_LP,\n                await signer.getAddress(),\n                MIGRATOOOOOOR,\n                liquidity.toString(),\n                deadline\n            );\n            const args = [\n                liquidity,\n                amountWethAddedMin,\n                deadline,\n                await signer.getAddress(),\n                permit.v,\n                permit.r,\n                permit.s\n            ];\n            const gasLimit = await contract.estimateGas.migrateWithPermit(...args);\n            const tx = await contract.migrateWithPermit(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"Migratoooooor.migrateWithPermit()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    return {\n        migrate,\n        migrateWithPermit\n    };\n};\n\nexport default useMigratoooooor;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Percent } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { MIGRATOOOOOOR, OH_GEEZ_LP } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { convertToken, deduct, formatBalance, parseBalance, parseCurrencyAmount } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useMigratoooooor from \"./useMigratoooooor\";\n\nexport type MigrateMode = \"permit\" | \"approve\";\n\nexport const SLIPPAGE_TOLERANCE = new Percent(\"5\", \"1000\"); // 0.5%\n\nexport interface MigrateLPState extends LPTokensState {\n    mode?: MigrateMode;\n    setMode: (_mode?: MigrateMode) => void;\n    onMigrate: () => Promise<void>;\n    migrating: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useMigrateLPState: () => MigrateLPState = () => {\n    const { ethereum } = useContext(EthersContext);\n    const state = useLPTokensState(\"my-lp-tokens\");\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\n    const { migrate, migrateWithPermit } = useMigratoooooor();\n    const [loading, setLoading] = useState(false);\n    const [mode, setMode] = useState<MigrateMode>();\n    const [migrating, setMigrating] = useState(false);\n\n    useEffect(() => {\n        if (ethereum?.isWalletConnect) {\n            setMode(\"approve\");\n        } else {\n            setMode(undefined);\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        state.setSelectedLPToken(state.lpTokens.find(token => token.address === OH_GEEZ_LP));\n    }, [state.lpTokens]);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, MIGRATOOOOOOR);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    // tslint:disable-next-line:max-func-body-length\n    useAsyncEffect(async () => {\n        if (\n            state.selectedLPToken &&\n            state.selectedLPToken.totalSupply &&\n            state.pair &&\n            state.fromToken &&\n            state.toToken\n        ) {\n            if (state.pair.liquidityToken.address === state.selectedLPToken.address) {\n                const fromReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.fromToken)),\n                    state.fromToken.decimals\n                );\n                const toReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.toToken)),\n                    state.toToken.decimals\n                );\n                state.setFromAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(fromReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenA.decimals\n                    )\n                );\n                state.setToAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(toReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenB.decimals\n                    )\n                );\n            }\n        }\n    }, [state.selectedLPToken, state.amount, state.pair, state.fromToken, state.toToken, signer]);\n\n    const onMigrate = useCallback(async () => {\n        if (mode && state.selectedLPToken && state.amount && state.toAmount && provider && signer) {\n            setMigrating(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const func = mode === \"approve\" ? migrate : migrateWithPermit;\n                const tx = await func(amount, deduct(parseBalance(state.toAmount), SLIPPAGE_TOLERANCE), signer);\n                await tx.wait();\n                await updateTokens();\n                await state.updateLPTokens();\n                state.setSelectedLPToken(undefined);\n            } finally {\n                setMigrating(false);\n            }\n        }\n    }, [mode, state.selectedLPToken, state.amount, state.toAmount, provider, signer, migrateWithPermit, updateTokens]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        mode,\n        setMode,\n        onMigrate,\n        migrating\n    };\n};\n\nexport default useMigrateLPState;\n","import React, { useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport ChangeNetwork from \"../components/ChangeNetwork\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Select, { Option } from \"../components/Select\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { MigrateSubMenu } from \"../components/web/WebSubMenu\";\nimport { MIGRATOOOOOOR } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useMigrateLPState, { MigrateLPState, MigrateMode } from \"../hooks/useMigrateLPState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst MigrateLPScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"migrate-liquidity\")} />\n                    <Text light={true}>{t(\"migrate-liquidity-desc\")}</Text>\n                    <Migrate />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <MigrateSubMenu />\n        </Screen>\n    );\n};\n\nconst Migrate = () => {\n    const { ethereum, chainId } = useContext(EthersContext);\n    const state = useMigrateLPState();\n    if (chainId !== 1) return <ChangeNetwork />;\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            {!ethereum?.isWalletConnect && (\n                <>\n                    <MigrateModeSelect state={state} />\n                    <Border />\n                </>\n            )}\n            <OhGeezLiquidity state={state} />\n            <Border />\n            <AmountInput state={state} />\n            <AmountInfo state={state} />\n        </View>\n    );\n};\n\nconst MigrateModeSelect = ({ state }: { state: MigrateLPState }) => {\n    const t = useTranslation();\n    const options: Option[] = [\n        {\n            key: \"permit\",\n            title: t(\"non-hardware-wallet\"),\n            description: t(\"non-hardware-wallet-desc\")\n        },\n        {\n            key: \"approve\",\n            title: t(\"hardware-wallet\"),\n            description: t(\"hardware-wallet-desc\")\n        }\n    ];\n    return (\n        <Select\n            title={t(\"wallet-type\")}\n            options={options}\n            option={options.find(option => option.key === state.mode)}\n            setOption={option => state.setMode(option?.key as MigrateMode | undefined)}\n        />\n    );\n};\n\nconst OhGeezLiquidity = ({ state }: { state: MigrateLPState }) => {\n    const t = useTranslation();\n    const title = \"OH-GEEZ/WETH \" + t(\"liquidity\");\n    if (!state.mode) {\n        return <Heading text={title} disabled={true} />;\n    }\n    return (\n        <LPTokenSelect\n            state={state}\n            title={title}\n            emptyText={t(\"you-dont-have-liquidity\")}\n            Item={LPTokenItem}\n            disabled={true}\n            viewOnly={true}\n        />\n    );\n};\n\nconst AmountInput = ({ state }: { state: MigrateLPState }) => {\n    const t = useTranslation();\n    if (!state.mode || !state.selectedLPToken) {\n        return <Heading text={t(\"amount-of-tokens\")} disabled={true} />;\n    }\n    return (\n        <TokenInput\n            title={t(\"amount-of-tokens\")}\n            token={state.selectedLPToken}\n            amount={state.amount}\n            onAmountChanged={state.setAmount}\n        />\n    );\n};\n\nconst AmountInfo = ({ state }: { state: MigrateLPState }) => {\n    const t = useTranslation();\n    const disabled = !state.selectedLPToken || isEmptyValue(state.amount);\n    return (\n        <InfoBox>\n            <Meta\n                label={state.fromToken ? state.fromToken.symbol : t(\"1st-token\")}\n                text={state.fromAmount}\n                disabled={disabled}\n            />\n            <Meta\n                label={state.toToken ? state.toToken.symbol : t(\"2nd-token\")}\n                text={state.toAmount}\n                disabled={disabled}\n            />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst Controls = ({ state }: { state: MigrateLPState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.amount]);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.selectedLPToken || isEmptyValue(state.amount) ? (\n                <MigrateButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    {state.mode === \"approve\" && !state.selectedLPTokenAllowed && (\n                        <ApproveButton\n                            token={state.selectedLPToken}\n                            spender={MIGRATOOOOOOR}\n                            onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                            onError={setError}\n                        />\n                    )}\n                    <MigrateButton\n                        state={state}\n                        onError={setError}\n                        disabled={state.mode === \"approve\" && !state.selectedLPTokenAllowed}\n                    />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst MigrateButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: MigrateLPState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const t = useTranslation();\n    const onPress = async () => {\n        onError({});\n        try {\n            await state.onMigrate();\n        } catch (e) {\n            onError(e);\n        }\n    };\n    return <Button title={t(\"migrate-liquidity\")} loading={state.migrating} onPress={onPress} disabled={disabled} />;\n};\n\nexport default MigrateLPScreen;\n"],"sourceRoot":""}